{"remainingRequest":"C:\\Users\\Chris\\Desktop\\Marcaje\\retomando29092018\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!C:\\Users\\Chris\\Desktop\\Marcaje\\retomando29092018\\node_modules\\rxjs\\_esm5\\internal\\observable\\SubscribeOnObservable.js","dependencies":[{"path":"C:\\Users\\Chris\\Desktop\\Marcaje\\retomando29092018\\node_modules\\rxjs\\_esm5\\internal\\observable\\SubscribeOnObservable.js","mtime":1538244219735},{"path":"C:\\Users\\Chris\\Desktop\\Marcaje\\retomando29092018\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1538244206341},{"path":"C:\\Users\\Chris\\Desktop\\Marcaje\\retomando29092018\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1538244190919}],"contextDependencies":[],"result":["/** PURE_IMPORTS_START tslib,_Observable,_scheduler_asap,_util_isNumeric PURE_IMPORTS_END */\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Observable } from '../Observable';\r\nimport { asap } from '../scheduler/asap';\r\nimport { isNumeric } from '../util/isNumeric';\r\nvar SubscribeOnObservable = /*@__PURE__*/ (function (_super) {\r\n    tslib_1.__extends(SubscribeOnObservable, _super);\r\n    function SubscribeOnObservable(source, delayTime, scheduler) {\r\n        if (delayTime === void 0) {\r\n            delayTime = 0;\r\n        }\r\n        if (scheduler === void 0) {\r\n            scheduler = asap;\r\n        }\r\n        var _this = _super.call(this) || this;\r\n        _this.source = source;\r\n        _this.delayTime = delayTime;\r\n        _this.scheduler = scheduler;\r\n        if (!isNumeric(delayTime) || delayTime < 0) {\r\n            _this.delayTime = 0;\r\n        }\r\n        if (!scheduler || typeof scheduler.schedule !== 'function') {\r\n            _this.scheduler = asap;\r\n        }\r\n        return _this;\r\n    }\r\n    SubscribeOnObservable.create = function (source, delay, scheduler) {\r\n        if (delay === void 0) {\r\n            delay = 0;\r\n        }\r\n        if (scheduler === void 0) {\r\n            scheduler = asap;\r\n        }\r\n        return new SubscribeOnObservable(source, delay, scheduler);\r\n    };\r\n    SubscribeOnObservable.dispatch = function (arg) {\r\n        var source = arg.source, subscriber = arg.subscriber;\r\n        return this.add(source.subscribe(subscriber));\r\n    };\r\n    SubscribeOnObservable.prototype._subscribe = function (subscriber) {\r\n        var delay = this.delayTime;\r\n        var source = this.source;\r\n        var scheduler = this.scheduler;\r\n        return scheduler.schedule(SubscribeOnObservable.dispatch, delay, {\r\n            source: source, subscriber: subscriber\r\n        });\r\n    };\r\n    return SubscribeOnObservable;\r\n}(Observable));\r\nexport { SubscribeOnObservable };\r\n//# sourceMappingURL=SubscribeOnObservable.js.map\r\n",null]}