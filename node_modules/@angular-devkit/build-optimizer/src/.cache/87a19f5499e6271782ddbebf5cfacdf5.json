{"remainingRequest":"C:\\Users\\Chris\\Desktop\\Marcaje\\retomando29092018\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!C:\\Users\\Chris\\Desktop\\Marcaje\\retomando29092018\\node_modules\\@angular\\fire\\database\\list\\changes.js","dependencies":[{"path":"C:\\Users\\Chris\\Desktop\\Marcaje\\retomando29092018\\node_modules\\@angular\\fire\\database\\list\\changes.js","mtime":1538244200058},{"path":"C:\\Users\\Chris\\Desktop\\Marcaje\\retomando29092018\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1538244206341},{"path":"C:\\Users\\Chris\\Desktop\\Marcaje\\retomando29092018\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1538244190919}],"contextDependencies":[],"result":["import { fromRef } from '../observable/fromRef';\r\nimport { of, merge } from 'rxjs';\r\nimport { isNil } from '../utils';\r\nimport { switchMap, distinctUntilChanged, scan } from 'rxjs/operators';\r\nexport function listChanges(ref, events) {\r\n    return fromRef(ref, 'value', 'once').pipe(switchMap(function (snapshotAction) {\r\n        var childEvent$ = [of(snapshotAction)];\r\n        events.forEach(function (event) { return childEvent$.push(fromRef(ref, event)); });\r\n        return merge.apply(void 0, childEvent$).pipe(scan(buildView, []));\r\n    }), distinctUntilChanged());\r\n}\r\nfunction positionFor(changes, key) {\r\n    var len = changes.length;\r\n    for (var i = 0; i < len; i++) {\r\n        if (changes[i].payload.key === key) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\nfunction positionAfter(changes, prevKey) {\r\n    if (isNil(prevKey)) {\r\n        return 0;\r\n    }\r\n    else {\r\n        var i = positionFor(changes, prevKey);\r\n        if (i === -1) {\r\n            return changes.length;\r\n        }\r\n        else {\r\n            return i + 1;\r\n        }\r\n    }\r\n}\r\nfunction buildView(current, action) {\r\n    var payload = action.payload, type = action.type, prevKey = action.prevKey, key = action.key;\r\n    var currentKeyPosition = positionFor(current, key);\r\n    var afterPreviousKeyPosition = positionAfter(current, prevKey);\r\n    switch (action.type) {\r\n        case 'value':\r\n            if (action.payload && action.payload.exists()) {\r\n                var prevKey_1 = null;\r\n                action.payload.forEach(function (payload) {\r\n                    var action = { payload: payload, type: 'value', prevKey: prevKey_1, key: payload.key };\r\n                    prevKey_1 = payload.key;\r\n                    current = current.concat([action]);\r\n                    return false;\r\n                });\r\n            }\r\n            return current;\r\n        case 'child_added':\r\n            if (currentKeyPosition > -1) {\r\n                var previous = current[currentKeyPosition - 1];\r\n                if ((previous && previous.key || null) != prevKey) {\r\n                    current = current.filter(function (x) { return x.payload.key !== payload.key; });\r\n                    current.splice(afterPreviousKeyPosition, 0, action);\r\n                }\r\n            }\r\n            else if (prevKey == null) {\r\n                return [action].concat(current);\r\n            }\r\n            else {\r\n                current = current.slice();\r\n                current.splice(afterPreviousKeyPosition, 0, action);\r\n            }\r\n            return current;\r\n        case 'child_removed':\r\n            return current.filter(function (x) { return x.payload.key !== payload.key; });\r\n        case 'child_changed':\r\n            return current.map(function (x) { return x.payload.key === key ? action : x; });\r\n        case 'child_moved':\r\n            if (currentKeyPosition > -1) {\r\n                var data = current.splice(currentKeyPosition, 1)[0];\r\n                current = current.slice();\r\n                current.splice(afterPreviousKeyPosition, 0, data);\r\n                return current;\r\n            }\r\n            return current;\r\n        default:\r\n            return current;\r\n    }\r\n}\r\n//# sourceMappingURL=changes.js.map",null]}