{"remainingRequest":"C:\\Users\\Chris\\Desktop\\Marcaje\\retomando29092018\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!C:\\Users\\Chris\\Desktop\\Marcaje\\retomando29092018\\node_modules\\@angular\\fire\\database\\list\\create-reference.js","dependencies":[{"path":"C:\\Users\\Chris\\Desktop\\Marcaje\\retomando29092018\\node_modules\\@angular\\fire\\database\\list\\create-reference.js","mtime":1538244200061},{"path":"C:\\Users\\Chris\\Desktop\\Marcaje\\retomando29092018\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1538244206341},{"path":"C:\\Users\\Chris\\Desktop\\Marcaje\\retomando29092018\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1538244190919}],"contextDependencies":[],"result":["import { snapshotChanges } from './snapshot-changes';\r\nimport { stateChanges } from './state-changes';\r\nimport { auditTrail } from './audit-trail';\r\nimport { createDataOperationMethod } from './data-operation';\r\nimport { createRemoveMethod } from './remove';\r\nimport { map } from 'rxjs/operators';\r\nexport function createListReference(query, afDatabase) {\r\n    return {\r\n        query: query,\r\n        update: createDataOperationMethod(query.ref, 'update'),\r\n        set: createDataOperationMethod(query.ref, 'set'),\r\n        push: function (data) { return query.ref.push(data); },\r\n        remove: createRemoveMethod(query.ref),\r\n        snapshotChanges: function (events) {\r\n            var snapshotChanges$ = snapshotChanges(query, events);\r\n            return afDatabase.scheduler.keepUnstableUntilFirst(afDatabase.scheduler.runOutsideAngular(snapshotChanges$));\r\n        },\r\n        stateChanges: function (events) {\r\n            var stateChanges$ = stateChanges(query, events);\r\n            return afDatabase.scheduler.keepUnstableUntilFirst(afDatabase.scheduler.runOutsideAngular(stateChanges$));\r\n        },\r\n        auditTrail: function (events) {\r\n            var auditTrail$ = auditTrail(query, events);\r\n            return afDatabase.scheduler.keepUnstableUntilFirst(afDatabase.scheduler.runOutsideAngular(auditTrail$));\r\n        },\r\n        valueChanges: function (events) {\r\n            var snapshotChanges$ = snapshotChanges(query, events);\r\n            return afDatabase.scheduler.keepUnstableUntilFirst(afDatabase.scheduler.runOutsideAngular(snapshotChanges$)).pipe(map(function (actions) { return actions.map(function (a) { return a.payload.val(); }); }));\r\n        }\r\n    };\r\n}\r\n//# sourceMappingURL=create-reference.js.map",null]}