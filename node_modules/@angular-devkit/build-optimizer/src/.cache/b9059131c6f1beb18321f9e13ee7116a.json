{"remainingRequest":"C:\\Users\\Chris\\Desktop\\Marcaje\\retomando29092018\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!C:\\Users\\Chris\\Desktop\\Marcaje\\retomando29092018\\node_modules\\rxjs\\_esm5\\internal\\observable\\generate.js","dependencies":[{"path":"C:\\Users\\Chris\\Desktop\\Marcaje\\retomando29092018\\node_modules\\rxjs\\_esm5\\internal\\observable\\generate.js","mtime":1538244219753},{"path":"C:\\Users\\Chris\\Desktop\\Marcaje\\retomando29092018\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1538244206341},{"path":"C:\\Users\\Chris\\Desktop\\Marcaje\\retomando29092018\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1538244190919}],"contextDependencies":[],"result":["/** PURE_IMPORTS_START _Observable,_util_identity,_util_isScheduler PURE_IMPORTS_END */\r\nimport { Observable } from '../Observable';\r\nimport { identity } from '../util/identity';\r\nimport { isScheduler } from '../util/isScheduler';\r\nexport function generate(initialStateOrOptions, condition, iterate, resultSelectorOrObservable, scheduler) {\r\n    var resultSelector;\r\n    var initialState;\r\n    if (arguments.length == 1) {\r\n        var options = initialStateOrOptions;\r\n        initialState = options.initialState;\r\n        condition = options.condition;\r\n        iterate = options.iterate;\r\n        resultSelector = options.resultSelector || identity;\r\n        scheduler = options.scheduler;\r\n    }\r\n    else if (resultSelectorOrObservable === undefined || isScheduler(resultSelectorOrObservable)) {\r\n        initialState = initialStateOrOptions;\r\n        resultSelector = identity;\r\n        scheduler = resultSelectorOrObservable;\r\n    }\r\n    else {\r\n        initialState = initialStateOrOptions;\r\n        resultSelector = resultSelectorOrObservable;\r\n    }\r\n    return new Observable(function (subscriber) {\r\n        var state = initialState;\r\n        if (scheduler) {\r\n            return scheduler.schedule(dispatch, 0, {\r\n                subscriber: subscriber,\r\n                iterate: iterate,\r\n                condition: condition,\r\n                resultSelector: resultSelector,\r\n                state: state\r\n            });\r\n        }\r\n        do {\r\n            if (condition) {\r\n                var conditionResult = void 0;\r\n                try {\r\n                    conditionResult = condition(state);\r\n                }\r\n                catch (err) {\r\n                    subscriber.error(err);\r\n                    return undefined;\r\n                }\r\n                if (!conditionResult) {\r\n                    subscriber.complete();\r\n                    break;\r\n                }\r\n            }\r\n            var value = void 0;\r\n            try {\r\n                value = resultSelector(state);\r\n            }\r\n            catch (err) {\r\n                subscriber.error(err);\r\n                return undefined;\r\n            }\r\n            subscriber.next(value);\r\n            if (subscriber.closed) {\r\n                break;\r\n            }\r\n            try {\r\n                state = iterate(state);\r\n            }\r\n            catch (err) {\r\n                subscriber.error(err);\r\n                return undefined;\r\n            }\r\n        } while (true);\r\n        return undefined;\r\n    });\r\n}\r\nfunction dispatch(state) {\r\n    var subscriber = state.subscriber, condition = state.condition;\r\n    if (subscriber.closed) {\r\n        return undefined;\r\n    }\r\n    if (state.needIterate) {\r\n        try {\r\n            state.state = state.iterate(state.state);\r\n        }\r\n        catch (err) {\r\n            subscriber.error(err);\r\n            return undefined;\r\n        }\r\n    }\r\n    else {\r\n        state.needIterate = true;\r\n    }\r\n    if (condition) {\r\n        var conditionResult = void 0;\r\n        try {\r\n            conditionResult = condition(state.state);\r\n        }\r\n        catch (err) {\r\n            subscriber.error(err);\r\n            return undefined;\r\n        }\r\n        if (!conditionResult) {\r\n            subscriber.complete();\r\n            return undefined;\r\n        }\r\n        if (subscriber.closed) {\r\n            return undefined;\r\n        }\r\n    }\r\n    var value;\r\n    try {\r\n        value = state.resultSelector(state.state);\r\n    }\r\n    catch (err) {\r\n        subscriber.error(err);\r\n        return undefined;\r\n    }\r\n    if (subscriber.closed) {\r\n        return undefined;\r\n    }\r\n    subscriber.next(value);\r\n    if (subscriber.closed) {\r\n        return undefined;\r\n    }\r\n    return this.schedule(state);\r\n}\r\n//# sourceMappingURL=generate.js.map\r\n",null]}